---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: scopes.mission-control.flanksource.com
spec:
  group: mission-control.flanksource.com
  names:
    kind: Scope
    listKind: ScopeList
    plural: scopes
    singular: scope
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Scope defines a collection of resources of a single type for
          access control
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: Description provides a brief explanation of what this
                  scope covers
                type: string
              targets:
                description: |-
                  Targets defines the resource selectors for this scope
                  Each target should contain exactly one resource type
                  Multiple targets are combined with OR logic
                items:
                  description: |-
                    ScopeTarget defines a single target in a Scope
                    Each target should contain exactly ONE resource type
                  properties:
                    canary:
                      description: Canary selector
                      properties:
                        agent:
                          description: Agent can be the agent id or the name of the
                            agent.
                          type: string
                        name:
                          description: Name is the name of the resource. Supports
                            wildcards.
                          type: string
                        tagSelector:
                          description: |-
                            TagSelector selects resources by tags using label selector syntax
                            Example: "env=prod,region=us-west"
                          type: string
                      type: object
                    component:
                      description: Component selector
                      properties:
                        agent:
                          description: Agent can be the agent id or the name of the
                            agent.
                          type: string
                        name:
                          description: Name is the name of the resource. Supports
                            wildcards.
                          type: string
                        tagSelector:
                          description: |-
                            TagSelector selects resources by tags using label selector syntax
                            Example: "env=prod,region=us-west"
                          type: string
                      type: object
                    config:
                      description: Config selector (mutually exclusive with other
                        resource types in practice)
                      properties:
                        agent:
                          description: Agent can be the agent id or the name of the
                            agent.
                          type: string
                        name:
                          description: Name is the name of the resource. Supports
                            wildcards.
                          type: string
                        tagSelector:
                          description: |-
                            TagSelector selects resources by tags using label selector syntax
                            Example: "env=prod,region=us-west"
                          type: string
                      type: object
                    global:
                      description: Global selector - applies to all resource types
                        (wildcard)
                      properties:
                        agent:
                          description: Agent can be the agent id or the name of the
                            agent.
                          type: string
                        name:
                          description: Name is the name of the resource. Supports
                            wildcards.
                          type: string
                        tagSelector:
                          description: |-
                            TagSelector selects resources by tags using label selector syntax
                            Example: "env=prod,region=us-west"
                          type: string
                      type: object
                    playbook:
                      description: Playbook selector
                      properties:
                        agent:
                          description: Agent can be the agent id or the name of the
                            agent.
                          type: string
                        name:
                          description: Name is the name of the resource. Supports
                            wildcards.
                          type: string
                        tagSelector:
                          description: |-
                            TagSelector selects resources by tags using label selector syntax
                            Example: "env=prod,region=us-west"
                          type: string
                      type: object
                  type: object
                  x-kubernetes-validations:
                  - message: exactly one of config, component, playbook, canary, or
                      global must be specified
                    rule: '[has(self.config), has(self.component), has(self.playbook),
                      has(self.canary), has(self.global)].filter(x, x).size() == 1'
                maxItems: 10
                minItems: 1
                type: array
            required:
            - targets
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the Scope's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation observed by the
                  controller
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
