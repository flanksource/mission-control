name: Create Release
on:
  push:
    branches:
      - main
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.semantic.outputs.release-version }}
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: codfish/semantic-release-action@cbd853afe12037afb1306caca9d6b1ab6a58cf2a # v1.10.0
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  binary:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
      - name: Install Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: v1.22.x
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            .bin
          key: cache-${{ hashFiles('**/go.sum') }}-${{ hashFiles('.bin/*') }}
          restore-keys: |
            cache-
      - run: make release
        env:
          VERSION: v${{ needs.semantic-release.outputs.release-version }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@1beeb572c19a9242f4361f4cee78f8e0d9aec5df # v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./.release/*
          tag: v${{ needs.semantic-release.outputs.release-version }}
          overwrite: true
          file_glob: true
  docker:
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set version
        # Always use git tags as semantic release can fail due to rate limit
        run: |
          git fetch --prune --unshallow
          echo "RELEASE_VERSION=$(git describe --abbrev=0 --tags | sed -e 's/^v//')" >> $GITHUB_ENV
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@686ffe1e82bed6639d202a799708561d18f30712 # v5
        with:
          name: flanksource/incident-commander
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot: true
          tags: "latest,v${{ env.RELEASE_VERSION }}"
          cache: true
  update-incident-commander-chart:
    if: needs.semantic-release.outputs.new-release-published == 'true'
    runs-on: ubuntu-latest
    needs: [semantic-release, docker]
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set version
        # Always use git tags as semantic release can fail due to rate limit
        run: |
          git fetch --prune --unshallow
          echo "RELEASE_VERSION=$(git describe --abbrev=0 --tags | sed -e 's/^v//')" >> $GITHUB_ENV
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          repository: "${{ github.repository_owner }}/mission-control-chart"
          token: ${{ secrets.FLANKBOT }}
          path: ./incident-commander-chart
      - name: Update image tags in chart
        uses: mikefarah/yq@17481714639613e92c3aaf594a92e5bbdddd66ab # master
        with:
          cmd: yq -i e '.image.tag = "v${{ env.RELEASE_VERSION }}"' incident-commander-chart/chart/values.yaml
      - name: Update image tags in agent chart
        uses: mikefarah/yq@17481714639613e92c3aaf594a92e5bbdddd66ab # master
        with:
          cmd: yq -i e '.image.tag = "v${{ env.RELEASE_VERSION }}"' incident-commander-chart/agent-chart/values.yaml
      - name: Update CRDs
        run: |
          cp config/crds/* incident-commander-chart/chart/crds/
      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842 # v5.0.1
        with:
          commit_message: "chore: update incident-commander image version to ${{ env.RELEASE_VERSION }}"
          repository: ./incident-commander-chart
          branch: main
